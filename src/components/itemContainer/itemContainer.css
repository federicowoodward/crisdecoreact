  .itemContainer {
  min-height: 100vh;
  position: relative;
  }
  .itemContainer .inputsGroup {
  position: absolute;
  top: 10px;
  left: 40px;
  display: flex;
  }
  .itemContainer .inputsGroup p {
  font-size: 25px;
  color: #fff;
  margin-right: 20px;
  }
  /* From uiverse.io by @alexruix */
  .itemContainer .group {
  display: flex;
  line-height: 24px;
  align-items: center;
  position: relative;
  max-width: 190px;
  }

  .itemContainer .input {
  height: 20px;
  line-height: 28px;
  padding: 0 1rem;
  width: 100%;
  padding-left: 2.5rem;
  border: 2px solid transparent;
  border-radius: 8px;
  outline: none;
  background-color: #D9E8D8;
  color: #0d0c22;
  box-shadow: 0 0 5px #C1D9BF, 0 0 0 10px #f5f5f5eb;
  transition: .3s ease;
  }

  .itemContainer .input::placeholder {
  color: #777;
  }

  .itemContainer .icon {
  position: absolute;
  left: 1rem;
  fill: #777;
  width: 1rem;
  height: 1rem;
  }


  .itemList {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;        
  justify-content: center;
  padding: 5vh;
  padding-top: 10vh;
  }
  .item {
  height: 310px;
  width: 270px;
  background-color: var(--color-g);
  margin: 0.8vh;
  border-radius: 0.7em;
  position: relative;
  text-align: center;
  padding: 2vh 0 0 0;
  }
  .item img {
  height: 9em;
  }
  .itemName {
  text-align: center;
  font-size: 25px;
  font-weight: bold;
  letter-spacing: 1px;
  }
  .itemAlt {
  text-align: start;
  margin: 0.5vh 2.5vh;
  }
  .item span {
  display: flex;
  justify-content: space-evenly;
  margin-top: 1em;
  position: absolute;
  bottom: 1px;
  left: 0;
  right: 0;
  padding: 5px;
  border: solid black;
  border-width: 1px 0 1px 0;
  }
  .itemStock {
  padding: 10px;
  border: 1px solid black;
  border-radius: 5px;
  color: var(--color-blue);
  }

  /* From uiverse.io by @satyamchaudharydev */
  .item span button {
  --primary-color: var(--color-blue);
  --secondary-color: #fff;
  --hover-color: var(--color-o);
  --arrow-width: 15px;
  --arrow-stroke: 2px;
  box-sizing: border-box;
  border: 0;
  border-radius: 20px;
  color: var(--secondary-color);
  padding: 1em 1.8em;
  background: var(--primary-color);
  display: flex;
  transition: 0.2s background;
  align-items: center;
  gap: 0.6em;
  font-weight: bold;
  }

  .item span button .arrow-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  }

  .item span button .arrow {
  margin-top: 1px;
  width: var(--arrow-width);
  background: var(--primary-color);
  height: var(--arrow-stroke);
  position: relative;
  transition: 0.2s;
  }

  .item span button .arrow::before {
  content: "";
  box-sizing: border-box;
  position: absolute;
  border: solid var(--secondary-color);
  border-width: 0 var(--arrow-stroke) var(--arrow-stroke) 0;
  display: inline-block;
  top: -3px;
  right: 3px;
  transition: 0.2s;
  padding: 3px;
  transform: rotate(-45deg);
  }

  .item span button:hover {
  background-color: var(--hover-color);
  }

  .item span button:hover .arrow {
  background: var(--secondary-color);
  }

  .item span button:hover .arrow:before {
  right: 0;
  }


/* From uiverse.io by @bandirevanth */
/* Switch starts here */
.rocker {
  display: inline-block;
  position: relative;
  /*
  SIZE OF SWITCH
  ==============
  All sizes are in em - therefore
  changing the font-size here
  will change the size of the switch.
  See .rocker-small below as example.
  */
  font-size: 2em;
  font-weight: bold;
  text-align: center;
  text-transform: uppercase;
  color: #888;
  width: 7em;
  height: 4em;
  overflow: hidden;
  border-bottom: 0.5em solid #eee;
}

.rocker-small {
  font-size: 0.75em;
 /* Sizes the switch */
  margin: 1em;
}

.rocker::before {
  content: "";
  position: absolute;
  top: 0.5em;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #999;
  border: 0.5em solid #eee;
  border-bottom: 0;
}

.rocker input {
  opacity: 0;
  width: 0;
  height: 0;
}

.switch-left,
.switch-right {
  cursor: pointer;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2.5em;
  width: 3em;
  transition: 0.2s;
  user-select: none;
}

.switch-left {
  height: 2.4em;
  width: 2.75em;
  left: 0.85em;
  bottom: 0.4em;
  background-color: #ddd;
  transform: rotate(15deg) skewX(15deg);
}

.switch-right {
  right: 0.5em;
  bottom: 0;
  background-color: #bd5757;
  color: #fff;
}

.switch-left::before,
.switch-right::before {
  content: "";
  position: absolute;
  width: 0.4em;
  height: 2.45em;
  bottom: -0.45em;
  background-color: #ccc;
  transform: skewY(-65deg);
}

.switch-left::before {
  left: -0.4em;
}

.switch-right::before {
  right: -0.375em;
  background-color: transparent;
  transform: skewY(65deg);
}

input:checked + .switch-left {
  background-color: #0084d0;
  color: #fff;
  bottom: 0px;
  left: 0.5em;
  height: 2.5em;
  width: 3em;
  transform: rotate(0deg) skewX(0deg);
}

input:checked + .switch-left::before {
  background-color: transparent;
  width: 3.0833em;
}

input:checked + .switch-left + .switch-right {
  background-color: #ddd;
  color: #888;
  bottom: 0.4em;
  right: 0.8em;
  height: 2.4em;
  width: 2.75em;
  transform: rotate(-15deg) skewX(-15deg);
}

input:checked + .switch-left + .switch-right::before {
  background-color: #ccc;
}

/* Keyboard Users */
input:focus + .switch-left {
  color: #333;
}

input:checked:focus + .switch-left {
  color: #fff;
}

input:focus + .switch-left + .switch-right {
  color: #fff;
}

input:checked:focus + .switch-left + .switch-right {
  color: #333;
}